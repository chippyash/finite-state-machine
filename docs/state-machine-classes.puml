@startuml
hide empty members
title Finite State Machine Classes
namespace Chippyash\StateMachine {
    interface "Interfaces\Describable" as Describable {
        getName(): string
        getDescription(): string
    }

    interface "Interfaces\StateAware" as StateAware {
        getState(): State
        setState(State $state): StateAware
    }

	class "Traits\HasState" as HasState << (T, cyan) >> {
		#state: State
	}
	StateAware <|-- HasState

    class "Traits\Describing" as Describing << (T, cyan)>>  {
        #name: string
        #description: string
    }
    Describable <|-- Describing

    class State <? Describable>{
        __construct(string $name, ?string $description = '')
    }

    class StateGraph <? Describable>{
        #graph: Graphviz\Graph
        #states: States
        #transitions: Transitions
        __construct(string $name, ?string $description = '')
        addState(State $state): StateGraph
        addTransition(State $from, State $to, Transition $transition): StateGraph
        getTransitionsForState(StateAware $statefulObject): Transitions
        isInitialState(State $state): bool
        isFinalState(State $state): bool
        getInitialStates(): States
        getNextStateForTransition(Transition $transition): State
        isValid(): bool
        getGraph(): Graph
        getTransitions(): Transitions
        getStates(): States
        transition(StateAware $object, Transition $transition): StateGraph
        __call(string $method, array $arguments = [])
    }

    class States <<Monad\Map>> {

    }
    State --o States

    class Transition <? Describable>{
    	#fromStateName: string
    	#toStateName: string
        __construct(string $name, ?string $description = '')
        getFromStateName(): string
        getToStateName(): string
        setFromStateName(string $fromStateName): Transition
        setToStateName(string $toStateName): Transition
    }
    Transition -o Transitions

    Describing <|-- State
    Describing <|-- Transition
    Describing <|-- StateGraph

    class Transitions <<Monad\Map>> {

    }

	StateAware -* StateGraph
    Transition --* StateGraph
    Transitions --* StateGraph
    State --* StateGraph
    States --* StateGraph

}
@enduml